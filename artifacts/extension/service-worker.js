chrome.runtime.onInstalled.addListener(()=>{console.log("OnboardingAudit.ai extension installed")});chrome.runtime.onMessage.addListener((t,e,c)=>(console.log("Background script received message:",t),t.action==="ping"&&c({status:"ok"}),t.action==="RUN_AUDIT"?(r(c),!0):(t.action==="audit_v1"&&(chrome.runtime.sendMessage({action:"audit_result",data:t.data}).catch(i=>console.log("Failed to forward audit result to popup:",i)),c({status:"forwarded"})),t.action==="saveAudit"&&chrome.storage.local.get(["audits"],i=>{const o=i.audits||[];o.push(t.data),chrome.storage.local.set({audits:o},()=>{c({success:!0})})}),!0)));async function r(t){try{console.log("Starting audit flow...");const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!e.id)throw new Error("No active tab found");console.log("Active tab found:",e.id,e.url),await chrome.scripting.executeScript({target:{tabId:e.id},files:["assets/content.js"]}),console.log("Content script injected successfully"),setTimeout(async()=>{try{if(!e.id)throw new Error("Tab ID is undefined");const c=await chrome.tabs.sendMessage(e.id,{action:"RUN_AUDIT"});console.log("Audit response received:",c),c&&typeof c=="object"&&"success"in c&&c.success&&"data"in c?t({success:!0,data:c.data}):t({success:!1,error:(c==null?void 0:c.error)||"Audit failed in content script"})}catch(c){console.error("Failed to communicate with content script:",c),t({success:!1,error:"Failed to communicate with content script. Try refreshing the page."})}},500)}catch(e){console.error("Failed to inject content script:",e),t({success:!1,error:e instanceof Error?e.message:"Failed to inject content script"})}}chrome.action.onClicked.addListener(async t=>{t.id&&await n(t.id)});async function n(t){try{if(await chrome.tabs.sendMessage(t,{action:"ping"}).catch(()=>null)){console.log("Content script already injected in tab",t);return}await chrome.scripting.executeScript({target:{tabId:t},files:["assets/content.js"]}),console.log("Content script injected successfully in tab",t)}catch(e){console.error("Failed to inject content script:",e)}}chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus.create({id:"audit-page",title:"Audit this page",contexts:["page"]})});chrome.contextMenus.onClicked.addListener((t,e)=>{t.menuItemId==="audit-page"&&(e!=null&&e.id)&&console.log("Context menu audit requested for tab:",e.id)});
