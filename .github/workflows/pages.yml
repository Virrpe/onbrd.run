name: Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute build metadata
        run: |
          echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "ISO_TIME=$(date -u +%FT%TZ)" >> $GITHUB_ENV
          echo "BUILD_ID=$(date -u +%Y%m%dT%H%M%SZ)-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Inject build metadata
        run: |
          set -euxo pipefail
          for f in site/index.html site/tokens.css site/styles.css site/site.webmanifest; do
            if [ -f "$f" ]; then
              sed -i \
                -e "s|%BUILD_ID%|${BUILD_ID}|g" \
                -e "s|%GIT_SHA%|${GIT_SHA}|g" \
                -e "s|%ISO_TIME%|${ISO_TIME}|g" \
                "$f"
            fi
          done
          # Ensure visible build comment inside <body>
          if ! grep -qi '<!-- build:' site/index.html; then
            printf '\n<!-- build: %s @ %s -->\n' "${GIT_SHA}" "${ISO_TIME}" >> site/index.html
          fi

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post-deploy smoke test
        run: |
          set -euxo pipefail
          URL="${{ steps.deployment.outputs.page_url }}"
          TS=$(date +%s)
          HTML=$(curl -s "${URL}?cb=${TS}")
          echo "$HTML" | grep -i '<!-- build:'             >/dev/null
          echo "$HTML" | grep -i 'brand__mark'             >/dev/null
          echo "$HTML" | grep -i 'srcset'                  >/dev/null
          echo "$HTML" | grep -Ei 'width="40"|height="40"' >/dev/null
